name: CD

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out Repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Add Yml Files
        run: |
          mkdir -p src/main/resources
          mkdir -p src/main/resources/mysql
          echo -e "${{ secrets.APPLICATION }}" > src/main/resources/application.yml
          echo -e "${{ secrets.APPLICATION_JWT }}" > src/main/resources/application-jwt.yml
          echo -e "${{ secrets.APPLICATION_LOCAL_MYSQL }}" > src/main/resources/mysql/application-local-mysql.yml
          echo -e "${{ secrets.APPLICATION_PROD_MYSQL }}" > src/main/resources/mysql/application-prod-mysql.yml
          echo -e "${{ secrets.APPLICATION_TEST_MYSQL }}" > src/main/resources/mysql/application-test-mysql.yml
          echo -e "${{ secrets.APPLICATION_LOCAL_OAUTH }}" > src/main/resources/oauth/application-local-oauth.yml
          echo -e "${{ secrets.APPLICATION_PROD_OAUTH }}" > src/main/resources/oauth/application-prod-oauth.yml
          echo -e "${{ secrets.APPLICATION_TEST_OAUTH }}" > src/main/resources/oauth/application-test-oauth.yml
          ls -al src/main/resources

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: cicdsample
          path: |
            appspec.yml
            scripts/
            logs/
            build/libs/*.jar

  deploy:
    env:
      PROJECT_NAME: bss-server-api
      BUCKET_NAME: bss-white-bucket
      CODE_DEPLOY_APP_NAME: bss-codedeploy
      DEPLOYMENT_GROUP_NAME: bss-dg-prod
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: cicdsample

      - name: Zip File
        run: zip -qq -r ./$GITHUB_SHA.zip .
        shell: bash

      - name: Access to AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$BUCKET_NAME/$PROJECT_NAME/$GITHUB_SHA.zip

      - name: Deploy to EC2 with CodeDeploy
        run: aws deploy create-deployment
          --application-name $CODE_DEPLOY_APP_NAME
          --deployment-config-name CodeDeployDefault.AllAtOnce
          --deployment-group-name $DEPLOYMENT_GROUP_NAME
          --s3-location bucket=$BUCKET_NAME,bundleType=zip,key=$PROJECT_NAME/$GITHUB_SHA.zip