name: TEST & CI

on:
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      checks: write
      pull-requests: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.ACTION_TOKEN }}
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Add Yml Files
        run: |
          mkdir -p src/main/resources
          mkdir -p src/main/resources/mysql
          echo -e "${{ secrets.APPLICATION }}" > src/main/resources/application.yml
          echo -e "${{ secrets.APPLICATION_JWT }}" > src/main/resources/application-jwt.yml
          echo -e "${{ secrets.APPLICATION_LOCAL_MYSQL }}" > src/main/resources/mysql/application-local-mysql.yml
          echo -e "${{ secrets.APPLICATION_PROD_MYSQL }}" > src/main/resources/mysql/application-prod-mysql.yml
          echo -e "${{ secrets.APPLICATION_TEST_MYSQL }}" > src/main/resources/mysql/application-test-mysql.yml
          ls -al src/main/resources

      - name: Grant Gradle Execution Permission
        run: chmod +x gradlew

      - name: Run Tests
        run: ./gradlew --info test -Dspring.profiles.active=test

      - name: Post Test Results as PR Comment
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: '**/build/test-results/test/TEST-*.xml'

      - name: Test Coverage Report
        id: jacoco
        uses: madrapps/jacoco-report@v1.6
        with:
          title: Test Coverage Report
          paths: ${{ github.workspace }}/build/reports/jacoco/test/jacocoTestReport.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 70
          min-coverage-changed-files: 80
          skip-if-no-changes: true

      - name: If Failed, Comment on Code Lines for Failed Tests
        uses: mikepenz/action-junit-report@v4
        if: always()
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'
          token: ${{ github.token }}